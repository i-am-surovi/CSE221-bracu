# -*- coding: utf-8 -*-
"""Task 03.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1jISb8JDpAoZJQ96FIMlFx645d333t-us
"""

# Task 3

# read the file
input_file = open("input3.txt","r")
# generate a output file by running the code
output_file = open("output3.txt","w")

# read the array size
N = int(input_file.readline())
# read the array
array = input_file.readline().split(" ")
array = list(map(int, array))     # Convert ['1','2'] to [1,2]

def countPair(arr):                # Merge Sort
  if len(arr) <= 1:
    return arr, 0
  else:
    mid = len(arr) // 2
    left, count_left = countPair(arr[:mid])
    right, count_right = countPair(arr[mid:])
    sorted_arr, count = CheckAndMerge(left, right)
    total_count = count_left + count_right + count
    return sorted_arr, total_count

def CheckAndMerge(left, right):           # Merge
  merged = []
  count = 0
  i = 0
  j = 0
  while i < len(left) and j < len(right):
    if left[i] > right[j]:
      merged.append(left[i])
      count += len(right) - j
      i += 1
    else:
      merged.append(right[j])
      j += 1

  merged.extend(left[i:])
  merged.extend(right[j:])
  return merged, count

array, count = countPair(array)

# Write Output
output_file.write(str(count))

# Must Close the file
output_file.close()